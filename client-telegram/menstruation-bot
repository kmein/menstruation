#!/usr/bin/env python3
from datetime import date
import emoji
import json
import locale
import os
import re
import requests
import sys
import telepot

ENDPOINT = "http://127.0.0.1:5000"

locale.setlocale(locale.LC_ALL, 'de_DE.UTF-8')

tag_emoji = {
    "vegetarian": ":carrot:",
    "vegan": ":seedling:",
    "organic": ":smiling_face_with_halo:",
    "sustainable fishing": ":fish:",
    "climate": ":globe_showing_Americas:",
    "yellow": ":yellow_heart:",
    "green": ":green_heart:",
    "red": ":red_heart:",
}

emoji_tag = {emoji: tag for tag, emoji in tag_emoji.items()}


def render_meal(meal):
    return r"{color} \[{price}] _{name}_ {tags}".format(
        color=tag_emoji[meal["color"]],
        price=locale.currency(meal["price"]["student"]),
        name=meal["name"],
        tags="".join(tag_emoji[tag] for tag in meal["tags"])
    )


def filter_meals(group, max_price, colors, tags):
    for meal in group["meals"]:
        if not colors or meal["color"] in colors:
            if not tags or tags & set(meal["tags"]):
                if meal["price"]["student"] <= max_price:
                    yield meal


def render_group(group, max_price, colors, tags):
    meals = list(filter_meals(group, max_price, colors, tags))
    if meals:
        return "*{name}*\n{meals}\n\n".format(
            name=group["name"].upper(),
            meals="\n".join(render_meal(meal) for meal in meals)
        )
    else:
        return ""


def handle(msg):
    content_type, _, chat_id = telepot.glance(msg)
    if content_type == "text" and msg["text"].startswith("/menstruate"):
        text = emoji.demojize(msg["text"])

        max_price_result = re.search(r"(\d+)\s?â‚¬", text)
        max_price = float(max_price_result.group(1) if max_price_result else "inf")

        colors = set(emoji_tag[emoji] for emoji in re.findall(
            r"(:green_heart:|:yellow_heart:|:red_heart:)", text
        ))
        tags = set(emoji_tag[emoji] for emoji in re.findall(
            r"(:carrot:|:seedling:|:smiling_face_with_halo:|:fish:|:globe_showing_Americas:)+", text
        ))

        json_object = json.loads(requests.get(ENDPOINT + "/{}/{}".format(191, date.today())).text)

        reply = emoji.emojize("".join(
            render_group(group, max_price, colors, tags) for group in json_object["groups"]
        ))

        if reply:
            bot.sendMessage(chat_id, reply, parse_mode='Markdown')
        else:
            bot.sendMessage(chat_id, emoji.emojize("Kein Essen gefunden. :worried_face:"))


if __name__ == "__main__":
    if "MENSTRUATION_TOKEN" not in os.environ:
        print("Please specify bot token in $MENSTRUATION_TOKEN.", file=sys.stderr)
        sys.exit(1)
    TOKEN = os.environ["MENSTRUATION_TOKEN"].strip()
    bot = telepot.Bot(TOKEN)
    bot.message_loop(handle, run_forever=True)
